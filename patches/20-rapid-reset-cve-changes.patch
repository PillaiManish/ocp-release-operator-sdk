diff -up ./Makefile.rapidreset ./Makefile
--- ./Makefile.rapidreset	2023-10-17 13:06:18
+++ ./Makefile	2023-10-17 13:07:02
@@ -132,7 +132,7 @@ test-sanity: build fix ## Test repo formatting, lintin
 	./hack/check-license.sh
 	./hack/check-error-log-msg-format.sh
 	go vet ./...
-	$(SCRIPTS_DIR)/fetch golangci-lint 1.31.0 && $(TOOLS_DIR)/golangci-lint run
+	$(SCRIPTS_DIR)/fetch golangci-lint 1.51.1 && $(TOOLS_DIR)/golangci-lint run
 
 .PHONY: test-docs
 test-docs: ## Test doc links
diff -up ./internal/ansible/apiserver/apiserver.go.rapidreset ./internal/ansible/apiserver/apiserver.go
--- ./internal/ansible/apiserver/apiserver.go.rapidreset	2023-10-17 13:06:40
+++ ./internal/ansible/apiserver/apiserver.go	2023-10-17 13:15:27
@@ -19,6 +19,7 @@ import (
 	"fmt"
 	"io"
 	"net/http"
+	"time"
 
 	logf "sigs.k8s.io/controller-runtime/pkg/log"
 	crmetrics "sigs.k8s.io/controller-runtime/pkg/metrics"
@@ -38,8 +39,9 @@ func Run(options Options) error {
 	mux.HandleFunc("/metrics", metricsHandler)
 
 	server := http.Server{
-		Addr:    fmt.Sprintf("%s:%d", options.Address, options.Port),
-		Handler: mux,
+		Addr:              fmt.Sprintf("%s:%d", options.Address, options.Port),
+		Handler:           mux,
+		ReadHeaderTimeout: 5 * time.Second,
 	}
 	log.Info("Starting to serve metrics listener", "Address", server.Addr)
 	return server.ListenAndServe()
diff -up ./internal/ansible/paramconv/paramconv.go.rapidreset ./internal/ansible/paramconv/paramconv.go
--- ./internal/ansible/paramconv/paramconv.go.rapidreset	2023-10-17 13:06:04
+++ ./internal/ansible/paramconv/paramconv.go	2023-10-17 13:15:00
@@ -19,6 +19,9 @@ import (
 import (
 	"regexp"
 	"strings"
+
+	"golang.org/x/text/cases"
+	"golang.org/x/text/language"
 )
 
 var (
@@ -42,7 +45,8 @@ func translateWord(word string, initCase bool) string 
 		return val
 	}
 	if initCase {
-		return strings.Title(word)
+		caser := cases.Title(language.AmericanEnglish)
+		return caser.String(word)
 	}
 	return word
 }
diff -up ./internal/ansible/paramconv/paramconv_test.go.rapidreset ./internal/ansible/paramconv/paramconv_test.go
--- ./internal/ansible/paramconv/paramconv_test.go.rapidreset	2023-10-17 13:05:56
+++ ./internal/ansible/paramconv/paramconv_test.go	2023-10-17 13:14:37
@@ -41,8 +41,8 @@ func TestMapToCamel(t *testing.T) {
 			want: map[string]interface{}{
 				"var":        "value",
 				"appService": "value",
-				"app8sk":     "value",
-				"App8skTest": "value",
+				"app8Sk":     "value",
+				"App8SkTest": "value",
 			},
 		},
 	}
diff -up ./internal/ansible/proxy/kubectl.go.rapidreset ./internal/ansible/proxy/kubectl.go
--- ./internal/ansible/proxy/kubectl.go.rapidreset	2023-10-17 13:06:46
+++ ./internal/ansible/proxy/kubectl.go	2023-10-17 13:14:26
@@ -254,7 +254,8 @@ func (s *server) ServeOnListener(l net.Listener) error
 // ServeOnListener starts the server using given listener, loops forever.
 func (s *server) ServeOnListener(l net.Listener) error {
 	server := http.Server{
-		Handler: s.Handler,
+		Handler:           s.Handler,
+		ReadHeaderTimeout: 5 * time.Second,
 	}
 	return server.Serve(l)
 }
diff -up ./internal/ansible/runner/eventapi/eventapi.go.rapidreset ./internal/ansible/runner/eventapi/eventapi.go
--- ./internal/ansible/runner/eventapi/eventapi.go.rapidreset	2023-10-17 13:05:48
+++ ./internal/ansible/runner/eventapi/eventapi.go	2023-10-17 13:14:11
@@ -81,7 +81,7 @@ func New(ident string, errChan chan<- error) (*EventRe
 
 	mux := http.NewServeMux()
 	mux.HandleFunc(rec.URLPath, rec.handleEvents)
-	srv := http.Server{Handler: mux}
+	srv := http.Server{Handler: mux, ReadHeaderTimeout: 5 * time.Second}
 	rec.server = &srv
 
 	go func() {
diff -up ./internal/generate/clusterserviceversion/bases/definitions/crd_test.go.rapidreset ./internal/generate/clusterserviceversion/bases/definitions/crd_test.go
--- ./internal/generate/clusterserviceversion/bases/definitions/crd_test.go.rapidreset	2023-10-17 13:06:25
+++ ./internal/generate/clusterserviceversion/bases/definitions/crd_test.go	2023-10-17 13:13:44
@@ -18,12 +18,13 @@ import (
 	"math/rand"
 	"reflect"
 	"sort"
-	"strings"
 	"time"
 
 	. "github.com/onsi/ginkgo"
 	. "github.com/onsi/gomega"
 	"github.com/operator-framework/api/pkg/operators/v1alpha1"
+	"golang.org/x/text/cases"
+	"golang.org/x/text/language"
 	"sigs.k8s.io/controller-tools/pkg/crd"
 	"sigs.k8s.io/controller-tools/pkg/loader"
 	"sigs.k8s.io/controller-tools/pkg/markers"
@@ -174,7 +175,8 @@ func makeMockMarkedFields() (markedFields map[crd.Type
 		if err != nil {
 			panic(err)
 		}
-		name := strings.Title(s)
+		caser := cases.Title(language.AmericanEnglish)
+		name := caser.String(s)
 		order := r.Int() % 200 // Very likely to get one conflict.
 		ident := crd.TypeIdent{Package: &loader.Package{}, Name: name}
 		if _, hasName := markedFields[ident]; hasName {
diff -up ./internal/helm/client/client.go.rapidreset ./internal/helm/client/client.go
--- ./internal/helm/client/client.go.rapidreset	2023-10-17 13:06:09
+++ ./internal/helm/client/client.go	2023-10-17 13:12:50
@@ -106,11 +106,9 @@ func NewOwnerRefInjectingClient(base kube.Client, rest
 	cr *unstructured.Unstructured) (kube.Interface, error) {
 
 	if cr != nil {
-		if cr.GetObjectKind() != nil {
-			if cr.GetObjectKind().GroupVersionKind().Empty() || cr.GetName() == "" || cr.GetUID() == "" {
-				var err = errors.New("owner resource is invalid")
-				return nil, err
-			}
+		if cr.GetObjectKind().GroupVersionKind().Empty() || cr.GetName() == "" || cr.GetUID() == "" {
+			var err = errors.New("owner resource is invalid")
+			return nil, err
 		}
 	}
 	return &ownerRefInjectingClient{
diff -up ./internal/scorecard/tar.go.rapidreset ./internal/scorecard/tar.go
--- ./internal/scorecard/tar.go.rapidreset	2023-10-17 13:06:14
+++ ./internal/scorecard/tar.go	2023-10-17 13:12:38
@@ -142,6 +142,8 @@ func UntarFile(tarName, target string) (err error) {
 				return err
 			}
 		}
+
+		//nolint
 		absFileName := filepath.Join(absPath, fileName)
 
 		if finfo.Mode().IsDir() {
diff -up ./internal/util/k8sutil/k8sutil.go.rapidreset ./internal/util/k8sutil/k8sutil.go
--- ./internal/util/k8sutil/k8sutil.go.rapidreset	2023-10-17 13:06:37
+++ ./internal/util/k8sutil/k8sutil.go	2023-10-17 13:11:58
@@ -23,6 +23,8 @@ import (
 	"strings"
 	"unicode"
 
+	"golang.org/x/text/cases"
+	"golang.org/x/text/language"
 	"k8s.io/apimachinery/pkg/api/meta"
 	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
 	"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"
@@ -64,7 +66,8 @@ func GetDisplayName(name string) string {
 		}
 		splitName[i] = temp
 	}
-	return strings.TrimSpace(strings.Title(strings.Join(splitName, " ")))
+	caser := cases.Title(language.AmericanEnglish, cases.NoLower)
+	return strings.TrimSpace(caser.String(strings.Join(splitName, " ")))
 }
 
 // GetTypeMetaFromBytes gets the type and object metadata from b. b is assumed
